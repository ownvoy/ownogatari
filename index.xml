<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>미래사회와 창의혁신인재</title>
    <link>https://ownogatari.xyz/</link>
    <description>Recent content on 미래사회와 창의혁신인재</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jan 2024 15:06:43 +0900</lastBuildDate><atom:link href="https://ownogatari.xyz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CornerNet</title>
      <link>https://ownogatari.xyz/posts/cornernet/</link>
      <pubDate>Tue, 02 Jan 2024 15:06:43 +0900</pubDate>
      
      <guid>https://ownogatari.xyz/posts/cornernet/</guid>
      <description>1. overview 1.1 objective anchor box를 없애보자. 1.2 background 1.2.1 anchor box의 문제점 너무 많은 수의 anchor box (ex. DSS에는 40k 이상, RetinaNet에는 100k 이상) \(\Rightarrow\) positive sample과 negative sample의 imbalance가 training 속도 느리게 함. hyperparameter \(\uparrow\) (ex. ratio, box size, feature map size) 2. main 2.1 architecture backbone(Hourglass Networ) + prediction Module(Corner pooling, Heatmaps, Embeddings, offsets)으로 이루어져 있다.
2.1.1 Corner pooling 각각의 코너를 top-left corner와 bottom-right corner라 한다.
주황색 코너를 봐보면, 사람에 대한 local 정보가 없다.</description>
    </item>
    
    <item>
      <title>FPN</title>
      <link>https://ownogatari.xyz/posts/fpn/</link>
      <pubDate>Tue, 26 Dec 2023 06:25:59 +0900</pubDate>
      
      <guid>https://ownogatari.xyz/posts/fpn/</guid>
      <description>1. overview 1.1 objective resolution과 semantic의 trade-off를 줄여보자.
\(\Leftrightarrow\) 모든 resolution(scale)에서 강한 semantic 정보를 얻어보자.
1.2 background 1.2.1 resolution semantic trade-off \(\text{resolution} \downarrow \ \ \Rightarrow \ \ \text{semantic} \uparrow (😀) , \ \ \text{detail} \downarrow (🙁)\) \(\text{resolution} \uparrow \ \ \Rightarrow \ \ \text{semantic} \downarrow (🙁) \ , \text{detail} \uparrow (😀)\)
아래 table의 각 col들은 같은 의미임.
higher resolution lower resolution weak semantic strong semantic low level feature high level feature detail abstract lower layer higher layer 1.</description>
    </item>
    
    <item>
      <title>Mask R-CNN</title>
      <link>https://ownogatari.xyz/posts/mask_r-cnn/</link>
      <pubDate>Sat, 23 Dec 2023 13:42:52 +0900</pubDate>
      
      <guid>https://ownogatari.xyz/posts/mask_r-cnn/</guid>
      <description>1. overview 1.1 objective Faster R-CNN 돌리는김에 segmentation 해보자. 1.2 background detection sementic segmentation instance segementation 대상 각각이 어떤 물체인지 각각이 어떤 클래스이고, instance를 구별x 각각이 어떤 클래스이고, instance를 구별 범위 bounding box마다 전체의 pixel마다 bounding box의 pixel마다 대표 모델 Faster R-CNN FCN Mask R-CNN , FCIS 예시 Fater R-CNN: sementic segmentation 못함. (RoIPooling이 한 뭉태기로 하니까, pixel에 대한 각각의 정보 소멸) FCN: instance segmentation 못함. (전체 픽셀별로 하니까) 2. main mask R-CNN은 RoI마다 mask(K class에 대해)를 내놓기에, instance segmentation 가능함.</description>
    </item>
    
    <item>
      <title>SSD</title>
      <link>https://ownogatari.xyz/posts/ssd/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ownogatari.xyz/posts/ssd/</guid>
      <description>1. overview 1.1 objective multiple scale에 대해 다뤄 보자. (큰 물체, 작은 물체) \(\Rightarrow\) 장점: low resolution에 대한 문제를 해결 \(\Rightarrow\) 방법: 여러 개의 conv layer 도입
different shape에 대해 다뤄 보자. (박스 형태, 2:1, 1:1) \(\Rightarrow\) 장점: 다양한 형태의 객체 검출 \(\Rightarrow\) 방법: 박스 형태 다양하게
1.2 background YOLO YOLO 같은 경우 feature map이 \(7\times7\)짜리 1개이다. box개수는 각 cell마다 2개 있어서 총 98개이다.
2. main 2.1 architecture pretrained model + convolutional layer 논문에서는 VGG를 pretrained model로 사용</description>
    </item>
    
    <item>
      <title>R-FCN</title>
      <link>https://ownogatari.xyz/posts/r-fcn/</link>
      <pubDate>Thu, 23 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ownogatari.xyz/posts/r-fcn/</guid>
      <description>1. overview 1.1 objective translation invariance 문제를 해결해보자. 모델을 fully convolutional 하게 만들어보자. 1.2 Background translational invariance vs translational variance translational invariance의 정의 positional invariance(translation invariance): 위치가 변하여도 결과가 똑같아야함 = 위치가 영향을 주지 않음 image classification에서의 주요 과제
cnn은 translational invaraince하다.
weight sharing convolutiona filter를 활용한 계산은 원래 translational equivariance(translational variance)함. 층이 깊어질 수록 tralational invariance가 됨. 그 이유는 계속 같은 필터를 써서(weight sharing) max pooling max pooling 역시 translational invariance한 연산 cnn은 어떤 위치에 사물이 있어도 잘 classify한다.</description>
    </item>
    
    <item>
      <title>R-CNN</title>
      <link>https://ownogatari.xyz/posts/r-cnn/</link>
      <pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ownogatari.xyz/posts/r-cnn/</guid>
      <description>1. overview 1.1 objective CNN을 object detection에 적용해보자.
1.2 background 1.2.1 object detection object detection은 사물이 뭔지, 어디에 있는지 찾는 것. classification과 localization을 동시에 하는 것. 1.2.2 way to localize object 가장 greedy한 방법: sliding window 이미지 크기: \(H\times W\) 박스 크기: \(h \times w\) 가능한 \(x\) 위치: \(W-w+1\) 가능한 \(y\) 위치: \(H-h +1\) 가능한 박스 위치: \((W-w+1)(H-h+1)\) 가능한 총 경우의 수 $$\sum_{h=1}^{H}\sum_{w=1}^{W}(W-w+1)(H-h+1)$$ is equal to $$\frac{H(H+1)}{2}\frac{W(W+1)}{2}$$ 만약 이미지의 크기가 300*300이라고 하면 81,000,000의 경우의 수가 나옴.</description>
    </item>
    
    <item>
      <title>Ddpg</title>
      <link>https://ownogatari.xyz/posts/ddpg/</link>
      <pubDate>Sat, 23 Sep 2023 00:53:01 +0900</pubDate>
      
      <guid>https://ownogatari.xyz/posts/ddpg/</guid>
      <description>0. BackGround observation: \(x_t\)
state: \(s_t\)
state: \(a_t\)
reward: \(r_t\)
policy: \(\pi, \ \ S \to P(A)\)
transition dynamics : \(p(s_{t+1} \mid s_t,a_t)\)
discounted future reward : \(R_T = \sum_{i=t}^{T}\gamma^{(i-t)}r(s_i,a_i)\)
objective function: \(E_{r_i,s_i \sim E, a_i \sim \pi}[R_1]\)
\(Q^{\pi}(s_t,a_t) = E_{r_i\geq t, s_i &amp;gt;t \sim E , a_i &amp;gt; t \sim \pi}[R_t \mid s_t, a_t]\)
\(Q^{\pi}(s_t,a_t) = E_{r_t,s_{t+1} \sim E} [r(s_t,a_t)+ \gamma E_{a_{t+1} \sim \pi} [Q^{\pi}(s_{t+1}, a_{t+1})]]\)
\(Q^{\mu}(s_t,a_t) = E_{r_t,s_{t+1} \sim E} [r(s_t,a_t)+ \gamma Q^{\mu}(s_{t+1}, \mu(s_{t+1}))]\)</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://ownogatari.xyz/docs/test/</link>
      <pubDate>Fri, 15 Sep 2023 23:53:47 +0900</pubDate>
      
      <guid>https://ownogatari.xyz/docs/test/</guid>
      <description>This is a test page!! I am going to write dev blogs.</description>
    </item>
    
  </channel>
</rss>
